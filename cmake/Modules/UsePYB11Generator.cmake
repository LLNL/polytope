#-----------------------------------------------------------------------------------
# - A Python-wrapping module for CMake using PYB11Generator/pybind11
#
# Modified from the UseSWIG module from the cmake2.8 release.
#
# Defines the following macros:
#   PYB11_GENERATE_BINDINGS(module_name module_list)
#     - Generates the Python bindings for each module in the list
#
# Internal macros to do the work:
#   PYB11_REGISTER_MODULE(name)
#     - Builds list of Python source code and generated C++ code
# 
#
# Variables that must be set before calling PYB11_GENERATE_BINDINGS:
#   PYB11_DIR
#     - Location of the python source code to build the bindings
#   PYTHON_EXECUTABLE
#     - Python executable
#   PYTHON_LIB_DIR
#     - Python lib (typically obtained from the executable root)
#
# Optional variables
#   PYB11_ADDITIONAL_ARGS
#     - Additional arguments to follow the command in PYB11_GENERATE_BINDINGS
#
# To get the names of the generated source
# use: ${PYB11_GENERATED_SOURCE}
#-----------------------------------------------------------------------------------

# Initialize the list of Python source code
set(PYB11_SOURCE)

# Initialize the list of C++ code generated by PYB11Generator
set(PYB11_GENERATED_SOURCE)

#
# INTERNAL: Build up the lists of source files and generated files to track
# outputs and dependencies for the build
#
macro(PYB11_REGISTER_MODULE _module)
  if (EXISTS "${PYB11_DIR}/${_module}MOD.py")
    set(_source "${PYB11_DIR}/${_module}MOD.py")
  else()
    if (EXISTS "${PROJECT_BINARY_DIR}/src/PBGWraps/${_module}MOD.py")
      set(_source "${PROJECT_BINARY_DIR}/src/PBGWraps/${_module}MOD.py")
    else()
      message(FATAL_ERROR "Could not find source file ${_module}MOD.py")
    endif()
  endif()
  list(APPEND PYB11_SOURCE ${_source})
  list(APPEND PYB11_GENERATED_SOURCE "${PYB11_MODULE_NAME}_${_module}.C")
endmacro()

#
# Runs "Python PolytopeMOD.py" to generate the bindings.
# This is where the PYB11Generator module is actually used. Calls the previous
# internal macros to generate the source file lists
#
macro(PYB11_GENERATE_BINDINGS module_list)
  list(APPEND PYB11_SOURCE "${PYB11_MODULE_NAME}MOD.py")
  list(APPEND PYB11_GENERATED_SOURCE "${PYB11_MODULE_NAME}.C")
  set(PYB11_GENERATED_HEADER "${PYB11_MODULE_NAME}.hh")
  foreach(it ${module_list})
    PYB11_REGISTER_MODULE(${it})
  endforeach()
  add_custom_command(
    OUTPUT ${PYB11_GENERATED_SOURCE} ${PYB11_GENERATED_HEADER}
    COMMAND ${PYTHON_EXECUTABLE} 
      ${PYB11_DIR}/${PYB11_MODULE_NAME}MOD.py
      ${PYB11_ADDITIONAL_ARGS}
    DEPENDS ${PYB11_SOURCE}
    )
endmacro()