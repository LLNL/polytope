# The PyBindGen directory
set(PBG_DIR "${PROJECT_SOURCE_DIR}/src/PBGWraps")

set(LIST_OF_WRAPPED_CLASSES "CXXContainers" "PLC" "Tessellation" "Tessellator")

# The .py source code
set(PYTHON_SOURCE)
list(APPEND PYTHON_SOURCE "PolytopeModulesBindings.py")

# The compiled .pyc source
set(COMPILED_PYTHON_SOURCE)
list(APPEND COMPILED_PYTHON_SOURCE "PolytopeModulesBindings.pyc")

# The C++ code generated by PyBindGen
set(GENERATED_SOURCES)
list(APPEND GENERATED_SOURCES "PolytopeModules.C")
set(GENERATED_HEADERS "PolytopeModules.hh")

# Finish assembling the lists of input, compiled, and generated source code
foreach(_class ${LIST_OF_WRAPPED_CLASSES})
  set(_source "${PBG_DIR}/${_class}Module.py")
  set(_outfile "${_source}c")
  list(APPEND COMPILED_PYTHON_SOURCE ${_outfile})
  list(APPEND PYTHON_SOURCE ${_source})
  list(APPEND GENERATED_SOURCES "PolytopeModules_${_class}.C")
endforeach(_class)

# Compile all Python source code
add_custom_command(
  OUTPUT ${COMPILED_PYTHON_SOURCE}
  COMMAND ${PYTHON_EXE} ${PYTHON_LIB_DIR}/compileall.py ${PBG_DIR}
)

# Executing PolytopeModulesBindings.py
add_custom_command(
  OUTPUT ${GENERATED_SOURCES} ${GENERATED_HEADERS}
  COMMAND ${PYTHON_EXE} ${PBG_DIR}/PolytopeModulesBindings.pyc
  DEPENDS ${COMPILED_PYTHON_SOURCE}
)

# libpolytope location
set(POLYTOPE_STATIC_LIB "${PROJECT_BINARY_DIR}/src/libpolytope.a")

# libpython<version> location
string(REPLACE "bin/python" "lib" PYTHON_LINK_LIB ${PYTHON_EXE})
string(REPLACE "bin/python" "lib/libpython${PYTHON_VERSION}.a"
  PYTHON_STATIC_LIB ${PYTHON_EXE})

# Include directories in the header file search path
include_directories("${PROJECT_BINARY_DIR}")
include_directories("${PROJECT_BINARY_DIR}/src")
include_directories("${PYTHON_INCLUDE_DIR}")
include_directories("${PBG_DIR}")

# The Python library of wrapped Polytope methods
add_library(PolytopeModules SHARED ${GENERATED_SOURCES})
#link_directories(${PROJECT_BINARY_DIR}/src ${PYTHON_LINK_LIB})
target_link_libraries(PolytopeModules ${POLYTOPE_STATIC_LIB} ${PYTHON_STATIC_LIB})
set_target_properties(PolytopeModules PROPERTIES PREFIX "")
set_target_properties(PolytopeModules PROPERTIES INSTALL_RPATH_USE_LINK_PATH true)

# Library install targets
install (TARGETS PolytopeModules DESTINATION lib)
