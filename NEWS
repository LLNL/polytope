--------------------------------------------------------------------------------
Release 0.5.3

Introducing the SerialDistributedTessellator, which should produce reliable
tessellations in parallel because it reduces all generators to all processors,
builds the global tessellation, and then culls down to each domains owned cells.
This is obviously not a good solution for scaling, but will be a useful check
on the DistributedTessellator.

--------------------------------------------------------------------------------
Release 0.5.2

More bugfixes for the most part:

- Adding a parallel consistency checking method (checkDistributedTessellation)
  that performs fairly extensive (and potentially expensive) checking of the
  parallel data structures.

- Trying to make the DistributedTessellator more robust, but at least with our
  one fully functioning serial Tessellator (Triangle) we still get occasionally
  bad parallel structures.  The problem is that the tessellation is not 100%
  reproducible with the same generator positions in different orders.

- Adding some new make configuration options, like use_silo=0/1.

--------------------------------------------------------------------------------
Release 0.5.1

Minor bugfix release:

- Puts the ASSERT2 macro inside the polytope namespace to avoid conflicts with
  host codes.

--------------------------------------------------------------------------------
Release 0.5.0

Initial release of polytope.  Includes functional 2D tessellator
TriangleTessellator and somewhat flaky VoroPP_2d and VoroPP_3d tessellators.
The DistributedTessellator seems to be working OK as well.  TetgenTessellator is
not passing it's unit tests.

Basically this release is intended as an initial beta release for the 2D
Triangle based tessellator, both serial and parallel.
